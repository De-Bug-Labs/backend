swagger: '2.0'
info: 
  version: 0.0.1
  title: GAAP API
host: 'localhost:5000'
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  JWT: 
    type: apiKey
    in: header
    name: auth
security:
  - JWT: []
parameters: 
  pageParam:
    name: page
    in: query
    description: The page number
    required: false
    type: integer
  pageSizeParam:
    name: pageSize
    in: query
    description: Max numer of elements per page
    required: false
    type: integer
  nameParam:
    name: name
    in: query
    description: name of the collaborator
    type: string
  dayParam:
    name: day
    in: query
    description: day selected of event (1-31), (1-30), (1-28), (1-29)
    type: number
  weekParam:
    name: week
    in: query
    description: week selected of event (1-4)
    type: number
  monthParam:
    name: month
    in: query
    description: month selected of event (01-12)
    type: number
  yearParam:
    name: year
    in: query
    description: year selected of event
    type: number
  viewParam:
    name: view
    in: query
    description: id of the view
    type: string  
paths:
  #---------Swagger-----------------------------
  /swagger:
    x-swagger-pipe: swagger_raw 
  #---------Example Endpoints-------------------
  /example:
    x-swagger-router-controller: ExampleController
    x-typeorm-repository-name: ExampleUser
    post:
      x-security-privilege: 'test:write'
      operationId: createExampleUser
      description: Create a new example user
      tags:
        - example
      parameters:
        - name: exampleUser
          description: user
          in: body
          schema:
            $ref: '#/definitions/ExampleUser'
      responses:
        '200':
          description: Test successful
          schema:
            $ref: '#/definitions/ExampleResponse'
        '400':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  /example/{id}:
    x-swagger-router-controller: ExampleController
    x-typeorm-repository-name: ExampleUser
    get:
      x-security-privilege: 'test:read'
      operationId: readExampleUser
      description: Find an example user by id
      tags:
        - example
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
      responses:
        '200':
          description: Test successful
          schema:
            $ref: '#/definitions/ExampleResponse'
        '404':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      x-security-privilege: 'test:write'
      operationId: updateExampleUser
      description: Update an example user by id
      tags:
        - example
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
        - name: exampleUser
          description: user
          in: body
          schema:
            $ref: '#/definitions/ExampleUser'
      responses:
        '200':
          description: Test successful
          schema:
            $ref: '#/definitions/ExampleResponse'
        '404':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      x-security-privilege: 'test:delete'
      operationId: deleteExampleUser
      description: Delete an example user by id
      tags:
        - example
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
      responses:
        '200':
          description: Test successful
          schema:
            $ref: '#/definitions/ExampleResponse'
        '404':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
   #-------//end example endpoints-------------------
   #------------------Email--------------------------
  /mail:
    x-swagger-router-controller: EmailController
    x-typeorm-repository-name: Staff
    post:
      x-security-privilege: 'mail:write'
      operationId: createRegisterEmail
      description: register email in database with information from user and sends mail to user and staff
      tags:
        - mail
      parameters:
        - name: postRegister
          in: body
          required: true
          description: Entity of database that will hold the mail information.
          schema:
            type: object
            properties:
              departmentId:
                type: string
                format: uuid
                description: 'ID of the specialist that will receive the email'
              name:
                type: string
                description: 'Name of the person who is going to send the email'
              email:
                type: string 
                description: 'Email of the person who is sending the emai'
              phone:
                type: string
                description: 'Phone of the person who is sendind the emai'
              description:
                type: string  
                description: 'Description of the email'
      responses:
        '201':
          description: succcesfull registration of mail content and mail sent to CC's
          schema:
            $ref: '#/definitions/SuccessfulMail'
        '404':
          description: Couldn't register mail in database
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: TCouldn't register mail in database
          schema:
            $ref: '#/definitions/ErrorResponse'
    #----------------//Email----------------------

    #----------------Staff----------------------
  /staff:
    x-swagger-router-controller: StaffController
    x-typeorm-repository-name: Staff
    post:
      x-security-privilege: 'staff:write'
      operationId: createStaff
      description: Creates a new staff member for the postregister entity relation and register the staff information in the database
      tags:
        - staff
      parameters:
        - name: staff
          in: body
          required: true
          description: The staff entity to create.
          schema:
            type: object
            properties:
              departmentId:
                type: array
                description: 'ID of the department of the staff'
                items:
                  type: string
                  format: uuid
              name:
                type: string
                description: 'Name of the staff member to create e.g Carlos Santana'
              email:
                type: string 
                description: 'Email of the staff member to create e.g csantana@gmail.com'
      responses:
        '201':
          description: staff member succesfully created and registered in database
          schema:
            $ref: '#/definitions/SuccessfulStaff'
        '404':
          description: could not create staff member
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: could not create staff member
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      x-security-privilege: 'staff:read'
      operationId: consultStaff
      description: consult staff members list with pagination, the pagination is defined with the maximum page size and the current page index
      tags:
        - staff
      parameters:
        - $ref: '#/parameters/pageParam'
        - $ref: '#/parameters/pageSizeParam'
      responses:
        '200':
          description: successful consult of staff members
          schema:
            $ref: '#/definitions/SuccessfulStaff'
        '404':
          description:  could not visualize staff members
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  could not visualize staff members
          schema:
            $ref: '#/definitions/ErrorResponse'
  /staff/{id}:
    x-swagger-router-controller: StaffController
    x-typeorm-repository-name: Staff
    get:
      x-security-privilege: 'staff:read'
      operationId: getStaffbyId
      description: consult staff member
      tags:
        - staff
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: successful consult of staff members
          schema:
            $ref: '#/definitions/SuccessfulStaff'
        '404':
          description:  staff member not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  could not visualize staff members
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      x-security-privilege: 'staff:delete'
      operationId: deleteStaff
      description: Delete an staff member fromn the database, id of staff must be provided
      tags:
        - staff
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        '200':
          description: staff member succesfully deleted
          schema:
            $ref: '#/definitions/SuccessfulStaff'
        '404':
          description: staff member not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: could not delete staff member
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      x-security-privilege: 'staff:modify'
      operationId: updateStaff
      description: Update staff member, id must be provided
      tags:
        - staff
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
        - name: staff
          description: staff object
          in: body
          schema:
            type: object
            properties:
              departmentId:
                description: 'ID of the department of the staff'
                type: string
                format: uuid
              name:
                type: string
                description: 'Name of the staff'
              email:
                type: string 
                description: 'Email of the staff'
      responses:
        '200':
          description: Staff Information update successful
          schema:
            $ref: '#/definitions/SuccessfulStaff'
        '404':
          description: Information update unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Information update unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  /staff/pages:
    x-swagger-router-controller: StaffController
    x-typeorm-repository-name: Staff
    get:
      x-security-privilege: 'staff:read'
      operationId: consultStaffPages
      description: consult count of staff members and number of pages required for pagination based on pagesize
      tags:
        - staff
      parameters:
        - $ref: '#/parameters/pageSizeParam'
      responses:
        '200':
          description: successful consult
          schema:
            type: object
            properties:
              pageSize:
                type: number
              staffCount: 
                type: number
              pageCount:
                type: number 
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    #-----------------//Staff------------------------
    #------------------User----------------------
  /user:
    x-swagger-router-controller: UserController
    x-typeorm-repository-name: User
    post:
      x-security-privilege: user:create
      operationId: createUser
      description: Create a new user member and register in database
      tags:
        - user
      parameters:
        - name: user
          in: body
          required: true
          description: The user to create.
          schema:
            type: object
            properties:
              roleId:
                type: array
                description: 'ID of users role'
                items:
                  type: string
                  format: uuid
              name:
                type: string
                description: 'First name of the user'
              lastName:
                type: string
                description: 'Last name of the user'
              email:
                type: string 
                format: email
                description: 'Email of the user'
              password:
                type: string
                description: 'Password of the user'
      responses:
        '201':
          description: User created successfully 
          schema:
            $ref: '#/definitions/SuccessfulUser'
    delete:
      x-security-privilege: 'user:delete'
      operationId: deleteUser
      description: Delete a user from database, id must be provided
      tags:
        - user
      parameters:
        - name: user
          in: body
          required: true
          description: The user to delete.
          schema:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: 'id of the user'
      responses:
        '201':
          description: user delete successful
          schema:
            $ref: '#/definitions/SuccessfulUser'
        '404':
          description: user delete unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: user delete
          schema:
            $ref: '#/definitions/ErrorResponse' 
    get:
      x-security-privilege: 'user:getAll'
      operationId: getAllUsers
      description: Fetch all user
      tags:
        - user
      responses:
        '200':
          description: Test successful
          schema:
            $ref: '#/definitions/SuccessfulUser'
        '404':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/{email}:
    x-swagger-router-controller: UserController
    x-typeorm-repository-name: User
    get:
      x-security-privilege: 'user:getMail'
      operationId: checkEmail
      description: check if there exists an Email
      tags:
        - user
      parameters:
        - name: email
          type: string
          format: email
          in: path
          required: true
      responses:
        '200':
          description: Test successful
          schema:
            $ref: '#/definitions/SuccessfulUser'
        '404':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    #-------------//User---------------------
    #-------------Login----------------------
  /login:
    x-swagger-router-controller: AuthController
    x-typeorm-repository-name: User
    post:
      x-security-privilege: 'login'
      operationId: login
      description: login to existing user account
      tags:
        - user
      parameters:
        - name: user
          in: body
          required: true
          schema:
            properties: 
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Wrong request
        '401':
          description: Wrong credentials
    #---------------//Login---------------
    #---------------Information-----------
  /information:
    x-swagger-router-controller: InformationController
    x-typeorm-repository-name: Information
    get:
      x-security-privilege: 'information:read'
      operationId: readInformation
      description: prints information from database, 
      tags:
        - information
      responses:
        '200':
          description: information successfull
          schema:
            $ref: '#/definitions/SuccessfulInformation'
        '404':
          description: information unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: information unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  /information/{id}:
    x-swagger-router-controller: InformationController
    x-typeorm-repository-name: Information
    put:
      x-security-privilege: 'information:modify'
      operationId: updateInformation
      description: Update information
      tags:
        - information
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
        - name: information
          description: information object
          in: body
          schema:
            $ref: '#/definitions/Information'
      responses:
        '200':
          description: Information update successful
          schema:
            $ref: '#/definitions/InformationResponse'
        '404':
          description: Information update unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Information update unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    #-----------Material-------------------    
  /material:
    x-swagger-router-controller: MaterialController
    x-typeorm-repository-name: Material
    post:
      x-security-privilege: 'material:write'
      operationId: createMaterial
      description: Create new material and register in database
      tags:
        - material
      parameters:
        - name: material
          description: material entity to be created
          in: body
          schema:
            type: object
            properties:
              title:
                type: string
                description: 'Name of the material'
              link:
                type: string 
                description: 'Link of the material'
      responses:
        '201':
          description: Material creation successful
          schema:
            $ref: '#/definitions/MaterialResponse'
        '400':
          description: Material creation unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Material creation unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      x-security-privilege: 'material:read'
      operationId: consultMaterial
      description: consult material list by pagination
      tags:
        - material
      parameters:
        - $ref: '#/parameters/pageParam'
        - $ref: '#/parameters/pageSizeParam'
      responses:
        '200':
          description: successful consult
          schema:
            $ref: '#/definitions/MaterialResponse'
        '404':
          description:  unsuccessful consult
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful consult
          schema:
            $ref: '#/definitions/ErrorResponse'
  /material/pages:
    x-swagger-router-controller: MaterialController
    x-typeorm-repository-name: Material
    get:
      x-security-privilege: 'material:read'
      operationId: consultMaterialPages
      description: consult count of materials and pages needed based on pagesize 
      tags:
        - material
      parameters:
        - $ref: '#/parameters/pageSizeParam'
      responses:
        '200':
          description: successful consult
          schema:
            type: object
            properties:
              pageSize:
                type: number
              materialsCount: 
                type: number
              pageCount:
                type: number 
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  /material/{id}:
    x-swagger-router-controller: MaterialController
    x-typeorm-repository-name: Material
    delete:
      x-security-privilege: 'material:delete'
      operationId: deleteMaterial
      description: Delete a Material, Id must be provided
      tags:
        - material
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
      responses:
        '200':
          description: Material deleted successful
          schema:
            $ref: '#/definitions/MaterialResponse'
        '404':
          description: Material deleted unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Material deleted unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      x-security-privilege: 'material:modify'
      operationId: updateMaterial
      description: Modify Material, Id must be provided
      tags:
        - material
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
        - name: material
          description: material object
          in: body
          schema:
            type: object
            properties:
              title:
                type: string
                description: 'title of the material'
              link:
                type: string 
                description: 'link of the material'
      responses:
        '200':
          description: Material updated successful
          schema:
            $ref: '#/definitions/MaterialResponse'
        '404':
          description: Material updated unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Material updated unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      x-security-privilege: 'material:read'
      operationId: readMaterial
      description: read Material by Id
      tags:
        - material
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
      responses:
        '200':
          description: Material read successful
          schema:
            $ref: '#/definitions/MaterialResponse'
        '404':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  #------------------department---------------------
  /department:
    x-swagger-router-controller: DepartmentController
    x-typeorm-repository-name: Department
    get:
      x-security-privilege: 'department:read'
      operationId: consultDepartment
      description: consult department list
      tags:
        - department
      responses:
        '200':
          description: successful
          schema:
            $ref: '#/definitions/DepartmentResponse'
        '404':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  /department/{id}:
    x-swagger-router-controller: DepartmentController
    x-typeorm-repository-name: Department   
    get:
      x-security-privilege: 'department:read'
      operationId: cunsultStaffByDepartment
      description: consult staff by department
      tags:
        - department
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
      responses:
        '200':
          description: successful consult
          schema:
            $ref: '#/definitions/StaffResponse'
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  #---------------------//Department----------------
  #---------------------Collaborator----------------
  /collaborator:
    x-swagger-router-controller: CollaboratorController
    x-typeorm-repository-name: Collaborator
    put:
      x-security-privilege: 'collaborator:write'
      operationId: createCollaborator
      description: create new collaborator
      tags:
        - collaborator
      parameters:
        - name: collaborator
          in: body
          required: true
          description: The collaborator to create.
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              srcimg:
                type: string 
              institution:
                type: string
              sectionId:
                type: string
                format: uuid
      responses:
        '200':
          description: successful
          schema:
            $ref: '#/definitions/CollaboratorResponse'
        '404':
          description: unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'  
  /collaborator/{id}:
    x-swagger-router-controller: CollaboratorController
    x-typeorm-repository-name: Collaborator   
    get:
      x-security-privilege: 'collaborator:read'
      operationId: consultCollaborator
      description: consult collaborator by id
      tags:
        - collaborator
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
      responses:
        '200':
          description: successful consult
          schema:
            $ref: '#/definitions/CollaboratorResponse'
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      x-security-privilege: 'collaborator:modify'
      operationId: updateCollaborator
      description: Modify Collaborator by Id
      tags:
        - collaborator
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
        - name: collaborator
          description: collaborator object
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              srcimg:
                type: string 
              institution:
                type: string
              section:
                type: string
                format: uuid
      responses:
        '200':
          description: Collaborator edited successful
          schema:
            $ref: '#/definitions/CollaboratorResponse'
        '404':
          description: Collaborator unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Collaborator unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      x-security-privilege: 'collaborator:delete'
      operationId: deleteCollaborator
      description: Delete collaborator by id
      tags:
        - collaborator
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
      responses:
        '200':
          description: Collaborator successful
          schema:
            $ref: '#/definitions/CollaboratorResponse'
        '404':
          description: Collaborator unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Collaborator unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
#----------------------//Collaborator-------------
#----------------------Section--------------------
  /section:
    x-swagger-router-controller: SectionController
    x-typeorm-repository-name: Section   
    get:
      x-security-privilege: 'section:read'
      operationId: consultSections
      description: consult sections (3 sections total) with number of collaborators and pagination based on page size
      tags:
        - section
      responses:
        '200':
          description: successful consult
          schema:
            type: object
            properties:
              sectionId:
                type: string
                format: uuid
              sectionName:
                type: string
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'  
  /section/{id}:
    x-swagger-router-controller: SectionController
    x-typeorm-repository-name: collaborator   
    get:
      x-security-privilege: 'section:read'
      operationId: consultSectionPage
      description: return the page of collaborators of selected section (3 sections)
      tags:
        - section
      parameters:
        - name: id
          description: id of the section
          type: string
          format: uuid
          in: path
          required: true
        - $ref: '#/parameters/pageSizeParam'
        - $ref: '#/parameters/pageParam'
        - $ref: '#/parameters/nameParam'
      responses:
        '200':
          description: successful consult
          schema:
            type: object
            properties:
              pageSize:
                type: number
              sectionCount: 
                type: number
              pageCount:
                type: number 
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  /sectionName/{id}:
    x-swagger-router-controller: SectionController
    x-typeorm-repository-name: collaborator     
    get:
      x-security-privilege: 'section:read'
      operationId: consultSectionPageName
      description: return the page of collaborators of selected section (3 sections)
      tags:
        - section
      parameters:
        - name: id
          description: id of the section
          type: string
          format: uuid
          in: path
          required: true
        - $ref: '#/parameters/nameParam'
      responses:
        '200':
          description: successful consult
          schema:
            type: object
            properties:
              pageSize:
                type: number
              sectionCount: 
                type: number
              pageCount:
                type: number 
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  /sectioncount/{id}:
    x-swagger-router-controller: SectionController
    x-typeorm-repository-name: Section   
    get:
      x-security-privilege: 'collaborator:read'
      operationId: consultSectionPagination
      description: consult section with number of collaborators on that section and number of pages needed based on pagesize
      tags:
        - section
      parameters:
        - name: id
          description: Id of the section to consult
          type: string
          format: uuid
          in: path
          required: true
        - $ref: '#/parameters/pageSizeParam'
      responses:
        '200':
          description: successful consult
          schema:
            type: object
            properties:
              sectionId:
                type: string
                format: uuid
              sectionCount:
                type: number
              sectionPages:
                type: number
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
#---------------//Section--------------------
#---------------Callendar--------------------
  /calendar:
    x-swagger-router-controller: CalendarController
    x-typeorm-repository-name: Calendar
    post:
      x-security-privilege: 'calendar:write'
      operationId: createCalendar
      description: create new event in calendar
      tags:
        - calendar
      parameters:
        - name: calendar
          in: body
          required: true
          description: the event to create
          schema:
            type: object
            properties:
              date:
                type: string
                format: date
              srcimg:
                type: string
              description:
                type: string 
              address:
                type: string
              title:
                type: string
      responses:
        '201':
          description: successful
          schema:
            $ref: '#/definitions/CalendarResponse'
        '404':
          description: unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'  
    get:
      x-security-privilege: 'calendar:read'
      operationId: consultCalendar
      description: consult calendar with pagination
      tags:
        - calendar
      parameters:
        - $ref: '#/parameters/pageParam'
        - $ref: '#/parameters/pageSizeParam'
        - $ref: '#/parameters/dayParam'
        - $ref: '#/parameters/weekParam'
        - $ref: '#/parameters/monthParam'
        - $ref: '#/parameters/yearParam'
      responses:
        '200':
          description: successful
          schema:
            $ref: '#/definitions/CalendarResponse'
        '404':
          description: unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'            
  /calendar/pages:
    x-swagger-router-controller: CalendarController
    x-typeorm-repository-name: Calendar
    get:
      x-security-privilege: 'calendar:read'
      operationId: consultCalendarPages
      description: consult calendar with pagination
      tags:
        - calendar
      parameters:
        - $ref: '#/parameters/pageSizeParam'
      responses:
        '200':
          description: successful
          schema:
            $ref: '#/definitions/CalendarResponse'
        '404':
          description: unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'            

  /calendar/{id}:
    x-swagger-router-controller: CalendarController
    x-typeorm-repository-name: Calendar
    put:
      x-security-privilege: 'calendar:modify'
      operationId: updateCalendarEvent
      description: Update an event by id
      tags:
        - calendar
      parameters:
        - name: id
          type: string
          format: uuid
          in: path
          required: true
        - name: event
          description: user
          in: body
          schema:
            type: object
            properties:
              date:
                type: string
                format: date
              srcimg:
                 type: string
              description:
                 type: string 
              address:
                 type: string
              title:
                 type: string
      responses:
        '200':
          description: Test successful
          schema:
            $ref: '#/definitions/CalendarResponse'
        '404':
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Test unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
     #---------------//Calendar--------------------
      #---------------View--------------------       
  /view:
    x-swagger-router-controller: ViewController
    x-typeorm-repository-name: View
    get:
      x-security-privilege: 'view:read'
      operationId: getView
      description: get the view 
      tags:
        - view
      responses:
        '200':
          description: View successful
          schema:
            $ref: '#/definitions/ViewResponse'
        '404':
          description: View unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: View unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      x-security-privilege: 'view:modify'
      operationId: updateView
      description: update view portal by id
      tags:
        - view
      parameters:
        - name: view
          description: status of the view
          in: body
          schema:
            type: object
            properties:
              id:
                description: 'ID of the the view'
                type: string
                format: uuid
              name:
                type: string
              status:
                description: 'true or false'
                type: boolean    
      responses:
        '200':
          description: successful consult
          schema:
             $ref: '#/definitions/ViewResponse'
        '404':
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description:  unsuccessful
          schema:
            $ref: '#/definitions/ErrorResponse'
  #---------------//View--------------------              
#---------------definitions------------------
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  ExampleUser:
    type: object
    properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: number
  ExampleResponse:
    allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
      - $ref: '#/definitions/ExampleUser'
  Information:
    type: object
    properties:
        mision:
          type: string
        instalation:
          type: string
        team:
          type: string
  InformationResponse:
    allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
      - $ref: '#/definitions/Information'
  SuccessfulMail:
    type: object
    properties:
        id_post:
          type: string
          format: uuid
        staffId:
          type: string
        name:
          type: string
        email:
          type: string  
        phone:
          type: string  
        description:
          type: string 
        date:
          type: string  
  SuccessfulStaff:
    type: object
    properties:
        StaffId:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string 
  SuccessfulUser:
    type: object
    properties:
        userId:
          type: string
          format: uuid
        name:
          type: string
        lastName:
          type: string
        email:
          type: string  
  SuccessfulInformation:
    type: object
    properties:
        InformationId:
          type: string
          format: uuid
        mission:
          type: string
        instalation:
          type: string  
        team:
          type: string
  MaterialResponse:  
    type: object
    properties:
        materialId:
          type: string
          format: uuid
        title:
          type: string
        link:
          type: string  
  DepartmentResponse:  
    type: object
    properties:
        departmentId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string 
  CollaboratorResponse:  
    type: object
    properties:
        collaboratorId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string  
        srcimg:
          type: string 
        institution:
          type: string
        sectionId:
          type: string
          format: uuid
  CalendarResponse:  
    type: object
    properties:
        calendarId:
          type: string
          format: uuid
        date:
          type: string
        srcimg:
           type: string
        description:
           type: string 
        address:
           type: string
        title:
           type: string
  StaffResponse:
    type: object
    properties:
        staffId:
          type: string
          format: uuid
        email:
          type: string
        name:
           type: string
  ViewResponse:
    type: object
    properties:
        viewId:
          type: string
          format: uuid
        name:
          type: string
        status:
           type: boolean

    